import java.io.*;
import java.util.*;

public class Solution {
    Stack <Integer> input;
    Stack <Integer> output;

    public Solution() {
        input = new Stack<>();
        output = new Stack<>();
        
    }
    
    public void enqueue(int x) {
        input.push(x);
    }
    
    public int dequeue() {
        if(input.isEmpty() && output.isEmpty()){return -1;}
        if(output.isEmpty() && !input.isEmpty()){
            while(!input.isEmpty()){
                output.push(input.pop());
            }
            return output.pop();
        }
        return output.pop();
    }
    
    public int peek() {
        if(output.isEmpty()){
            while(!input.isEmpty()){
            output.push(input.pop());
            }
            return output.peek();
        }
        return output.peek();
    }
    
    public boolean empty() {
        if(input.isEmpty() && output.isEmpty()){
            return true;
        }
        return false;
    }
    public void printTopElements(int top){
        if(empty()){
            System.out.println(" Queue is Empty():");
            return ;
        }
        System.out.println(top);
    }

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
       Solution s = new Solution();
       Scanner sc = new Scanner(System.in); // No of queries
       int q = sc.nextInt(); 
       for(int i = 0; i<q;++i){
        int type = sc.nextInt();
        if(type==1){
            int val = sc.nextInt();
            s.enqueue(val);
        }
        else if(type==2){
            s.dequeue();
        }
        else if(type==3){
            s.printTopElements(s.peek());
        }
        
       }   
    }
}
