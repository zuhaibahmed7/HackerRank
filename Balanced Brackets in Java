import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'isBalanced' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

    public static String isBalanced(String s) {
    // Write your code here
    
    Stack <Character> stringStack = new Stack<>();
        for(int i = 0; i<s.length(); ++i){
            char x = s.charAt(i);
            if(x == '(' || x == '{'  || x == '['){ 
            stringStack.push(x);
            continue;
            }
        
        if(stringStack.isEmpty()){
            return "NO";
        }
        
        char popedElement = stringStack.pop();
        if( x == ')' && popedElement != '(' ) {
            return "NO";
        }
        if( x == '}' && popedElement != '{' ) {
            return "NO";
        }
        if( x == ']' && popedElement != '[' ) {
            return "NO";
        }
      }
      return stringStack.isEmpty() ? "YES": "NO";
      
    }   
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = Integer.parseInt(bufferedReader.readLine().trim());

        for (int tItr = 0; tItr < t; tItr++) {
            String s = bufferedReader.readLine();

            String result = Result.isBalanced(s);

            bufferedWriter.write(result);
            bufferedWriter.newLine();
        }

        bufferedReader.close();
        bufferedWriter.close();
    }
}
